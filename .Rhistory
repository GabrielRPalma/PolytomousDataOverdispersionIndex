for (m in 1:10){
print0('m = ', m, '\n')
a <- get_simulation_results(n = 100, j = 3, k = 10,
m = m, n_simulations = 10, theta_super = 100)
a$m <- rep(m, nrow(a))
result <- a %>%
group_by(theta) %>%
summarise(m_min = min(index)/unique(m),
m_max = max(index)/unique(m))
result$m <- rep(m, nrow(result))
m_behaviour_data <- rbind(m_behaviour_data, result)
}
for (m in 1:10){
printf('m = ', m, '\n')
a <- get_simulation_results(n = 100, j = 3, k = 10,
m = m, n_simulations = 10, theta_super = 100)
a$m <- rep(m, nrow(a))
result <- a %>%
group_by(theta) %>%
summarise(m_min = min(index)/unique(m),
m_max = max(index)/unique(m))
result$m <- rep(m, nrow(result))
m_behaviour_data <- rbind(m_behaviour_data, result)
}
for (m in 1:10){
cat('m = ', m, '\n')
a <- get_simulation_results(n = 100, j = 3, k = 10,
m = m, n_simulations = 10, theta_super = 100)
a$m <- rep(m, nrow(a))
result <- a %>%
group_by(theta) %>%
summarise(m_min = min(index)/unique(m),
m_max = max(index)/unique(m))
result$m <- rep(m, nrow(result))
m_behaviour_data <- rbind(m_behaviour_data, result)
}
m_behaviour_data <- m_behaviour_data %>% drop_na()
m_behaviour_data
# Checking multiple values of m
m_behaviour_data <- data.frame(theta = NaN, m_min = NaN,
m_max = NaN, m = NaN)
for (m in 1:10){
cat('m = ', m, '\n')
a <- get_simulation_results(n = 100, j = 3, k = 10,
m = m, n_simulations = 10, theta_super = 100)
a$m <- rep(m, nrow(a))
result <- a %>%
group_by(theta) %>%
summarise(m_min = min(index)/unique(m),
m_mean = mean(index)/unique(m),
m_max = max(index)/unique(m))
result$m <- rep(m, nrow(result))
m_behaviour_data <- rbind(m_behaviour_data, result)
}
# Checking multiple values of m
m_behaviour_data <- data.frame(theta = NaN, m_min = NaN,
n_mean = NaN,m_max = NaN, m = NaN)
for (m in 1:10){
cat('m = ', m, '\n')
a <- get_simulation_results(n = 100, j = 3, k = 10,
m = m, n_simulations = 10, theta_super = 100)
a$m <- rep(m, nrow(a))
result <- a %>%
group_by(theta) %>%
summarise(m_min = min(index)/unique(m),
m_mean = mean(index)/unique(m),
m_max = max(index)/unique(m))
result$m <- rep(m, nrow(result))
m_behaviour_data <- rbind(m_behaviour_data, result)
}
# Checking multiple values of m
m_behaviour_data <- data.frame(theta = NaN, m_min = NaN,
m_mean = NaN,m_max = NaN, m = NaN)
for (m in 1:10){
cat('m = ', m, '\n')
a <- get_simulation_results(n = 100, j = 3, k = 10,
m = m, n_simulations = 10, theta_super = 100)
a$m <- rep(m, nrow(a))
result <- a %>%
group_by(theta) %>%
summarise(m_min = min(index)/unique(m),
m_mean = mean(index)/unique(m),
m_max = max(index)/unique(m))
result$m <- rep(m, nrow(result))
m_behaviour_data <- rbind(m_behaviour_data, result)
}
m_behaviour_data %>%
ggplot(mapping = aes(x = m, y = m_mean, colour = as.factor(theta))) +
geom_line()
m_behaviour_data <- m_behaviour_data %>% drop_na()
m_behaviour_data %>%
ggplot(mapping = aes(x = m, y = m_mean, colour = as.factor(theta))) +
geom_line()
m_behaviour_data %>%
ggplot(mapping = aes(x = m, y = m_mean, colour = as.factor(theta))) +
geom_line() + theme_new()
m_behaviour_data %>%
ggplot(mapping = aes(x = m, y = m_mean, colour = as.factor(theta))) +
geom_line(aes(ymin=n_min, ymax=m_max), fill="lightblue") + theme_new()
# Create example data
df <- data.frame(
x = 1:10,
y = sin(1:10),
m_max = sin(1:10) + 0.2,
n_min = sin(1:10) - 0.2
)
# Create the plot
ggplot(df, aes(x=x)) +
geom_ribbon(aes(ymin=n_min, ymax=m_max), fill="lightblue") +
geom_line(aes(y=y), color="blue") +
theme_minimal()
m_behaviour_data %>%
ggplot(mapping = aes(x = m, y = m_mean, colour = as.factor(theta))) +
geom_line(aes(ymin=m_min, ymax=m_max), fill="lightblue") + theme_new()
m_behaviour_data %>%
ggplot(mapping = aes(x = m, y = m_mean, colour = as.factor(theta))) +
geom_line() +
geom_ribbon(aes(ymin=m_min, ymax=m_max), fill="lightgray") + theme_new()
m_behaviour_data %>%
ggplot(mapping = aes(x = m, y = m_mean, colour = as.factor(theta))) +
geom_line()
m_behaviour_data %>%
ggplot(aes(x = m, y = m_mean)) +
geom_line() +
geom_point(aes(x = m, y = m_mean)) +
geom_ribbon(aes(x = m, ymin = m_min, ymax = m_max),
fill="#232323", alpha = 0.4) +
#facet_wrap(~as.factor(Costumer), scales = 'free') +
theme_new() +
xlab("M") +
ylab("Corrected longitudinal multinomial dispersion index")
m_behaviour_data %>%
ggplot(aes(x = m, y = m_mean, colour = theta)) +
geom_line() +
geom_point(aes(x = m, y = m_mean)) +
geom_ribbon(aes(x = m, ymin = m_min, ymax = m_max),
fill="#232323", alpha = 0.4) +
#facet_wrap(~as.factor(Costumer), scales = 'free') +
theme_new() +
xlab("M") +
ylab("Corrected longitudinal multinomial dispersion index")
m_behaviour_data %>%
ggplot(aes(x = m, y = m_mean, colour = theta)) +
geom_line() +
geom_point(aes(x = m, y = m_mean)) +
geom_ribbon(aes(x = m, ymin = m_min, ymax = m_max),
fill="#232323", alpha = 0.4) +
#facet_wrap(~as.factor(Costumer), scales = 'free') +
theme_new() +
xlab("M") +
ylab("Corrected longitudinal multinomial dispersion index") +
scale_color_manual(values=c("0.01" = "blue", "10" = "darkgreen"))
m_behaviour_data %>%
ggplot(aes(x = m, y = m_mean, colour = theta)) +
geom_line() +
geom_point(aes(x = m, y = m_mean)) +
geom_ribbon(aes(x = m, ymin = m_min, ymax = m_max),
fill="#232323", alpha = 0.4) +
#facet_wrap(~as.factor(Costumer), scales = 'free') +
theme_new() +
xlab("M") +
ylab("Corrected longitudinal multinomial dispersion index") +
scale_color_manual(values=c("0.01" = "#232323", "10" = "#034567"))
m_behaviour_data %>%
ggplot(aes(x = m, y = m_mean, colour = theta)) +
geom_line() +
geom_point(aes(x = m, y = m_mean)) +
geom_ribbon(aes(x = m, ymin = m_min, ymax = m_max),
fill="#232323", alpha = 0.4) +
#facet_wrap(~as.factor(Costumer), scales = 'free') +
theme_new() +
xlab("M") +
ylab("Corrected longitudinal multinomial dispersion index") +
scale_color_manual(values=c("0.01" = "#232323", "10" = "#A34567"))
m_behaviour_data %>%
ggplot(aes(x = m, y = m_mean, colour = theta)) +
geom_line() +
geom_point(aes(x = m, y = m_mean)) +
geom_ribbon(aes(x = m, ymin = m_min, ymax = m_max),
fill="#232323", alpha = 0.4) +
#facet_wrap(~as.factor(Costumer), scales = 'free') +
theme_new() +
xlab("M")
m_behaviour_data %>%
ggplot(aes(x = m, y = m_mean, colour = theta)) +
geom_line() +
geom_point(aes(x = m, y = m_mean)) +
geom_ribbon(aes(x = m, ymin = m_min, ymax = m_max),
fill="#232323", alpha = 0.4) +
#facet_wrap(~as.factor(Costumer), scales = 'free') +
theme_new() +
xlab("M")
m_behaviour_data %>%
ggplot(aes(x = m, y = m_mean, colour = theta)) +
geom_line() +
geom_point(aes(x = m, y = m_mean)) +
geom_ribbon(aes(x = m, ymin = m_min, ymax = m_max),
fill="#232323", alpha = 0.4) +
#facet_wrap(~as.factor(Costumer), scales = 'free') +
theme_new() +
xlab("M")
m_behaviour_data %>%
ggplot(aes(x = m, y = m_mean, colour = theta)) +
geom_line() +
geom_point(aes(x = m, y = m_mean)) +
geom_ribbon(aes(x = m, ymin = m_min, ymax = m_max),
fill="#232323", alpha = 0.4) +
#facet_wrap(~as.factor(Costumer), scales = 'free') +
theme_new() +
xlab("M") +
ylab("Corrected longitudinal multinomial dispersion index") +
scale_color_manual(values=c("0.01" = "#232323", "10" = "#A34567"),
label=c("0.01" = "Highly superdispersed", "10" = "Light superdispersed/equidispersed"))
m_behaviour_data %>%
ggplot(aes(x = m, y = m_mean, colour = theta)) +
geom_line() +
geom_point(aes(x = m, y = m_mean)) +
geom_ribbon(aes(x = m, ymin = m_min, ymax = m_max),
fill="#232323", alpha = 0.4) +
#facet_wrap(~as.factor(Costumer), scales = 'free') +
theme_new() +
xlab("M") +
ylab("Corrected longitudinal multinomial dispersion index") +
scale_color_manual(values=c("0.01" = "#232323", "10" = "#A34567"),
label=c("0.01" = "Yes", "10" = "No"))
m_behaviour_data %>%
ggplot(aes(x = m, y = m_mean, colour = theta)) +
geom_line() +
geom_point(aes(x = m, y = m_mean)) +
geom_ribbon(aes(x = m, ymin = m_min, ymax = m_max),
fill="#232323", alpha = 0.4) +
#facet_wrap(~as.factor(Costumer), scales = 'free') +
theme_new() +
xlab("M") +
geom_hline(yintercept=0.6, linetype="dashed", colour = 'red') +
ylab("Corrected longitudinal multinomial dispersion index") +
scale_color_manual(values=c("0.01" = "#232323", "10" = "#A34567"),
label=c("0.01" = "Yes", "10" = "No"))
m_behaviour_data %>%
ggplot(aes(x = m, y = m_mean, colour = theta)) +
geom_line() +
geom_point(aes(x = m, y = m_mean)) +
geom_ribbon(aes(x = m, ymin = m_min, ymax = m_max),
fill="#232323", alpha = 0.4) +
#facet_wrap(~as.factor(Costumer), scales = 'free') +
theme_new() +
xlab(expression(m)) +
geom_hline(yintercept=0.6, linetype="dashed", colour = 'red') +
ylab("Corrected longitudinal multinomial dispersion index") +
scale_color_manual(values=c("0.01" = "#232323", "10" = "#A34567"),
label=c("0.01" = "Yes", "10" = "No"))
m_behaviour_data %>%
ggplot(aes(x = m, y = m_mean, colour = theta)) +
geom_line() +
geom_point(aes(x = m, y = m_mean)) +
geom_ribbon(aes(x = m, ymin = m_min, ymax = m_max),
fill="#232323", alpha = 0.4) +
#facet_wrap(~as.factor(Costumer), scales = 'free') +
theme_new() +
xlab(expression(italic(m))) +
geom_hline(yintercept=0.6, linetype="dashed", colour = 'red') +
ylab("Corrected longitudinal multinomial dispersion index") +
scale_color_manual(values=c("0.01" = "#232323", "10" = "#A34567"),
label=c("0.01" = "Yes", "10" = "No"))
m_behaviour_data %>%
ggplot(aes(x = m, y = m_mean, colour = theta)) +
geom_line() +
geom_point(aes(x = m, y = m_mean)) +
geom_ribbon(aes(x = m, ymin = m_min, ymax = m_max),
fill="#232323", alpha = 0.4) +
#facet_wrap(~as.factor(Costumer), scales = 'free') +
theme_new() +
xlab(expression(italic(m))) +
geom_hline(yintercept=0.6, linetype="dashed", colour = 'red') +
geom_vline(yintercept=2, linetype="dashed", colour = 'red') +
ylab("Corrected longitudinal multinomial dispersion index") +
scale_color_manual(values=c("0.01" = "#232323", "10" = "#A34567"),
label=c("0.01" = "Yes", "10" = "No"))
m_behaviour_data %>%
ggplot(aes(x = m, y = m_mean, colour = theta)) +
geom_line() +
geom_point(aes(x = m, y = m_mean)) +
geom_ribbon(aes(x = m, ymin = m_min, ymax = m_max),
fill="#232323", alpha = 0.4) +
#facet_wrap(~as.factor(Costumer), scales = 'free') +
theme_new() +
xlab(expression(italic(m))) +
geom_hline(yintercept=0.6, linetype="dashed", colour = 'red') +
geom_vline(xintercept=2, linetype="dashed", colour = 'red') +
ylab("Corrected longitudinal multinomial dispersion index") +
scale_color_manual(values=c("0.01" = "#232323", "10" = "#A34567"),
label=c("0.01" = "Yes", "10" = "No"))
for (m in 1:50){
cat('m = ', m, '\n')
a <- get_simulation_results(n = 100, j = 3, k = 10,
m = m, n_simulations = 10, theta_super = 100)
a$m <- rep(m, nrow(a))
result <- a %>%
group_by(theta) %>%
summarise(m_min = min(index)/unique(m),
m_mean = mean(index)/unique(m),
m_max = max(index)/unique(m))
result$m <- rep(m, nrow(result))
m_behaviour_data <- rbind(m_behaviour_data, result)
}
# Checking multiple values of m
m_behaviour_data <- data.frame(theta = NaN, m_min = NaN,
m_mean = NaN,m_max = NaN, m = NaN)
for (m in 1:50){
cat('m = ', m, '\n')
a <- get_simulation_results(n = 100, j = 3, k = 10,
m = m, n_simulations = 10, theta_super = 1000)
a$m <- rep(m, nrow(a))
result <- a %>%
group_by(theta) %>%
summarise(m_min = min(index)/unique(m),
m_mean = mean(index)/unique(m),
m_max = max(index)/unique(m))
result$m <- rep(m, nrow(result))
m_behaviour_data <- rbind(m_behaviour_data, result)
}
# Checking multiple values of m
m_behaviour_data <- data.frame(theta = NaN, m_min = NaN,
m_mean = NaN,m_max = NaN, m = NaN)
for (m in 1:50){
cat('m = ', m, '\n')
a <- get_simulation_results(n = 100, j = 3, k = 10,
m = m, n_simulations = 100, theta_super = 10)
a$m <- rep(m, nrow(a))
result <- a %>%
group_by(theta) %>%
summarise(m_min = min(index)/unique(m),
m_mean = mean(index)/unique(m),
m_max = max(index)/unique(m))
result$m <- rep(m, nrow(result))
m_behaviour_data <- rbind(m_behaviour_data, result)
}
m_behaviour_data <- m_behaviour_data %>% drop_na()
m_behaviour_data %>%
ggplot(aes(x = m, y = m_mean, colour = theta)) +
geom_line() +
geom_point(aes(x = m, y = m_mean)) +
geom_ribbon(aes(x = m, ymin = m_min, ymax = m_max),
fill="#232323", alpha = 0.4) +
#facet_wrap(~as.factor(Costumer), scales = 'free') +
theme_new() +
xlab(expression(italic(m))) +
geom_hline(yintercept=0.6, linetype="dashed", colour = 'red') +
geom_vline(xintercept=2, linetype="dashed", colour = 'red') +
ylab("Corrected longitudinal multinomial dispersion index") +
scale_color_manual(values=c("0.01" = "#232323", "10" = "#A34567"),
label=c("0.01" = "No", "10" = "Yes")) +
labs(fill = "Highly superdispersed")
m_behaviour_data %>%
ggplot(aes(x = m, y = m_mean, colour = theta)) +
geom_line() +
geom_point(aes(x = m, y = m_mean)) +
geom_ribbon(aes(x = m, ymin = m_min, ymax = m_max),
fill="#232323", alpha = 0.4) +
#facet_wrap(~as.factor(Costumer), scales = 'free') +
theme_new() +
xlab(expression(italic(m))) +
geom_hline(yintercept=0.6, linetype="dashed", colour = 'red') +
geom_vline(xintercept=2, linetype="dashed", colour = 'red') +
ylab("Corrected longitudinal multinomial dispersion index") +
scale_color_manual(values=c("0.01" = "#232323", "10" = "#A34567"),
label=c("0.01" = "No", "10" = "Yes")) +
labs(value = "Highly superdispersed")
m_behaviour_data %>%
ggplot(aes(x = m, y = m_mean, colour = theta)) +
geom_line() +
geom_point(aes(x = m, y = m_mean)) +
geom_ribbon(aes(x = m, ymin = m_min, ymax = m_max),
fill="#232323", alpha = 0.4) +
#facet_wrap(~as.factor(Costumer), scales = 'free') +
theme_new() +
xlab(expression(italic(m))) +
geom_hline(yintercept=0.6, linetype="dashed", colour = 'red') +
geom_vline(xintercept=2, linetype="dashed", colour = 'red') +
ylab("Corrected longitudinal multinomial dispersion index") +
scale_color_manual(values=c("0.01" = "#232323", "10" = "#A34567"),
label=c("0.01" = "No", "10" = "Yes")) +
scale_fill_manual(name = "Highly superdispersed")
m_behaviour_data %>%
ggplot(aes(x = m, y = m_mean, colour = theta)) +
geom_line() +
geom_point(aes(x = m, y = m_mean)) +
geom_ribbon(aes(x = m, ymin = m_min, ymax = m_max),
fill="#232323", alpha = 0.4) +
#facet_wrap(~as.factor(Costumer), scales = 'free') +
theme_new() +
xlab(expression(italic(m))) +
geom_hline(yintercept=0.6, linetype="dashed", colour = 'red') +
geom_vline(xintercept=2, linetype="dashed", colour = 'red') +
ylab("Corrected longitudinal multinomial dispersion index") +
scale_color_manual(name = "Highly \n superdispersed",
values=c("0.01" = "#232323", "10" = "#A34567"),
label=c("0.01" = "No", "10" = "Yes")) +
scale_fill_manual(name = "Highly \n superdispersed")
m_behaviour_data %>%
ggplot(aes(x = m, y = m_mean, colour = theta)) +
geom_line() +
geom_point(aes(x = m, y = m_mean)) +
geom_ribbon(aes(x = m, ymin = m_min, ymax = m_max),
fill="#232323", alpha = 0.4) +
#facet_wrap(~as.factor(Costumer), scales = 'free') +
theme_new() +
xlab(expression(italic(m))) +
geom_hline(yintercept=0.6, linetype="dashed", colour = 'red') +
geom_vline(xintercept=2, linetype="dashed", colour = 'red') +
ylab("Corrected longitudinal multinomial dispersion index") +
scale_color_manual(name = "Highly superdispersed",
values=c("0.01" = "#232323", "10" = "#A34567"),
label=c("0.01" = "No", "10" = "Yes")) +
ggsave('Plots/profiles_time_series.png', dpi = 300,
height = 6, width = 8)
m_behaviour_data %>%
ggplot(aes(x = m, y = m_mean, colour = theta)) +
geom_line() +
geom_point(aes(x = m, y = m_mean)) +
geom_ribbon(aes(x = m, ymin = m_min, ymax = m_max),
fill="#232323", alpha = 0.4) +
#facet_wrap(~as.factor(Costumer), scales = 'free') +
theme_new() +
xlab(expression(italic(m))) +
geom_hline(yintercept=0.6, linetype="dashed", colour = 'red') +
geom_vline(xintercept=2, linetype="dashed", colour = 'red') +
ylab("Corrected longitudinal multinomial dispersion index") +
scale_color_manual(name = "Highly superdispersed",
values=c("0.01" = "#232323", "10" = "#A34567"),
label=c("0.01" = "No", "10" = "Yes"))
m_behaviour_data %>%
ggplot(aes(x = m, y = m_mean, colour = theta)) +
geom_line() +
geom_point(aes(x = m, y = m_mean)) +
geom_ribbon(aes(x = m, ymin = m_min, ymax = m_max),
fill="#232323", alpha = 0.4) +
#facet_wrap(~as.factor(Costumer), scales = 'free') +
theme_new() +
xlab(expression(italic(m))) +
#geom_hline(yintercept=0.6, linetype="dashed", colour = 'red') +
geom_vline(xintercept=2, linetype="dashed", colour = 'red') +
ylab("Corrected longitudinal multinomial dispersion index") +
scale_color_manual(name = "Highly superdispersed",
values=c("0.01" = "#232323", "10" = "#A34567"),
label=c("0.01" = "No", "10" = "Yes"))
ggsave('Plots/m_behaviour', dpi = 300,
height = 6, width = 8)
ggsave('Plots/m_behaviour.png', dpi = 300,
height = 6, width = 8)
theme_new <- function(base_size = 20, base_family = "Arial"){
theme_minimal(base_size = base_size, base_family = base_family) %+replace%
theme(
axis.text = element_text(size = 20, colour = "grey30"),
legend.key=element_rect(colour=NA, fill =NA),
axis.line = element_line(colour = 'black'),
axis.ticks =         element_line(colour = "grey20"),
plot.title.position = 'plot',
legend.position = "bottom"
)
}
m_behaviour_data %>%
ggplot(aes(x = m, y = m_mean, colour = theta)) +
geom_line() +
geom_point(aes(x = m, y = m_mean)) +
geom_ribbon(aes(x = m, ymin = m_min, ymax = m_max),
fill="#232323", alpha = 0.4) +
#facet_wrap(~as.factor(Costumer), scales = 'free') +
theme_new() +
xlab(expression(italic(m))) +
#geom_hline(yintercept=0.6, linetype="dashed", colour = 'red') +
geom_vline(xintercept=2, linetype="dashed", colour = 'red') +
ylab("Corrected longitudinal multinomial dispersion index") +
scale_color_manual(name = "Highly superdispersed",
values=c("0.01" = "#232323", "10" = "#A34567"),
label=c("0.01" = "No", "10" = "Yes"))
ggsave('Plots/m_behaviour.png', dpi = 300,
height = 6, width = 8)
m_behaviour_data %>%
ggplot(aes(x = m, y = m_mean, colour = theta)) +
geom_line() +
geom_point(aes(x = m, y = m_mean)) +
geom_ribbon(aes(x = m, ymin = m_min, ymax = m_max),
fill="#232323", alpha = 0.4) +
#facet_wrap(~as.factor(Costumer), scales = 'free') +
theme_new() +
xlab(expression(italic(m))) +
#geom_hline(yintercept=0.6, linetype="dashed", colour = 'red') +
geom_vline(xintercept=2, linetype="dashed", colour = 'red') +
ylab("Corrected longitudinal \n multinomial dispersion index") +
scale_color_manual(name = "Highly superdispersed",
values=c("0.01" = "#232323", "10" = "#A34567"),
label=c("0.01" = "No", "10" = "Yes"))
ggsave('Plots/m_behaviour.png', dpi = 300,
height = 6, width = 8)
m_behaviour_data %>%
ggplot(aes(x = m, y = m_mean, colour = theta)) +
geom_line() +
geom_point(aes(x = m, y = m_mean)) +
geom_ribbon(aes(x = m, ymin = m_min, ymax = m_max),
fill="#232323", alpha = 0.4) +
#facet_wrap(~as.factor(Costumer), scales = 'free') +
theme_new() +
xlab(expression(italic(m))) +
#geom_hline(yintercept=0.6, linetype="dashed", colour = 'red') +
geom_vline(xintercept=2, linetype="dashed", colour = 'red') +
ylab("Corrected longitudinal \n multinomial dispersion index") +
scale_color_manual(name = "Clear overdispersion",
values=c("0.01" = "#232323", "10" = "#A34567"),
label=c("0.01" = "No", "10" = "Yes"))
ggsave('Plots/m_behaviour.png', dpi = 300,
height = 6, width = 8)
